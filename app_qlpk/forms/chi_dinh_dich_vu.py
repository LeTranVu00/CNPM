from PyQt5.QtWidgets import (
    QWidget, QLabel, QLineEdit, QComboBox, QPushButton, QVBoxLayout,
    QHBoxLayout, QGridLayout, QGroupBox, QTableWidget, QTableWidgetItem,
    QHeaderView, QAbstractItemView, QMessageBox
)
from PyQt5.QtCore import Qt, QDate
from PyQt5.QtGui import QFont
from database import get_connection

from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os

# ƒêƒÉng k√Ω font Unicode ti·∫øng Vi·ªát
font_path = os.path.join(os.path.dirname(__file__), "fonts", "arial.ttf")
if os.path.exists(font_path):
    pdfmetrics.registerFont(TTFont("ArialUnicode", font_path))

class ChiDinhDichVu(QWidget):
    def __init__(self):
        super().__init__()
        self.setFont(QFont("Arial", 10))
        self.setStyleSheet("QGroupBox { font-weight: bold; color: #1565c0; }")
        self.initUI()
        self.load_benh_nhan()
        self.load_dich_vu_mau()

    def initUI(self):
        main_layout = QVBoxLayout(self)
        main_layout.setSpacing(10)
        main_layout.setContentsMargins(8, 8, 8, 8)

        # === 1. TH√îNG TIN B·ªÜNH NH√ÇN ===
        group_bn = QGroupBox("TH√îNG TIN B·ªÜNH NH√ÇN")
        grid_bn = QGridLayout()

        self.combo_hoten = QComboBox()
        self.input_gioitinh = QLineEdit()
        self.input_ngaysinh = QLineEdit()
        self.input_dienthoai = QLineEdit()
        self.input_diachi = QLineEdit()

        grid_bn.addWidget(QLabel("H·ªç v√† t√™n"), 0, 0)
        grid_bn.addWidget(self.combo_hoten, 0, 1)
        grid_bn.addWidget(QLabel("Gi·ªõi t√≠nh"), 0, 2)
        grid_bn.addWidget(self.input_gioitinh, 0, 3)
        grid_bn.addWidget(QLabel("Ng√†y sinh"), 1, 0)
        grid_bn.addWidget(self.input_ngaysinh, 1, 1)
        grid_bn.addWidget(QLabel("ƒêi·ªán tho·∫°i"), 1, 2)
        grid_bn.addWidget(self.input_dienthoai, 1, 3)
        grid_bn.addWidget(QLabel("ƒê·ªãa ch·ªâ"), 2, 0)
        grid_bn.addWidget(self.input_diachi, 2, 1, 1, 3)
        group_bn.setLayout(grid_bn)
        main_layout.addWidget(group_bn)

        # === 2. CH·ªà ƒê·ªäNH D·ªäCH V·ª§ ===
        group_cd = QGroupBox("CH·ªà ƒê·ªäNH D·ªäCH V·ª§")
        grid_cd = QGridLayout()

        self.combo_dichvu = QComboBox()
        self.input_soluong = QLineEdit("1")
        self.input_dongia = QLineEdit()
        self.input_thanhtien = QLineEdit()
        self.input_thanhtien.setReadOnly(True)
        self.btn_them = QPushButton("‚ûï Th√™m")

        grid_cd.addWidget(QLabel("T√™n d·ªãch v·ª•"), 0, 0)
        grid_cd.addWidget(self.combo_dichvu, 0, 1)
        grid_cd.addWidget(QLabel("S·ªë l∆∞·ª£ng"), 0, 2)
        grid_cd.addWidget(self.input_soluong, 0, 3)
        grid_cd.addWidget(QLabel("ƒê∆°n gi√°"), 1, 0)
        grid_cd.addWidget(self.input_dongia, 1, 1)
        grid_cd.addWidget(QLabel("Th√†nh ti·ªÅn"), 1, 2)
        grid_cd.addWidget(self.input_thanhtien, 1, 3)
        grid_cd.addWidget(self.btn_them, 0, 4, 2, 1)
        group_cd.setLayout(grid_cd)
        main_layout.addWidget(group_cd)

        # === 3. DANH S√ÅCH D·ªäCH V·ª§ ===
        group_ds = QGroupBox("DANH S√ÅCH D·ªäCH V·ª§ ƒê√É CH·ªà ƒê·ªäNH")
        vbox_ds = QVBoxLayout()

        self.table = QTableWidget(0, 5)
        self.table.setHorizontalHeaderLabels(["STT", "T√™n d·ªãch v·ª•", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "Th√†nh ti·ªÅn"])
        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.table.setAlternatingRowColors(True)
        self.table.setSelectionBehavior(QAbstractItemView.SelectRows)
        vbox_ds.addWidget(self.table)
        group_ds.setLayout(vbox_ds)
        main_layout.addWidget(group_ds)

        # === 4. N√öT CH·ª®C NƒÇNG ===
        btn_layout = QHBoxLayout()
        self.btn_luu = QPushButton("üíæ L∆∞u (F2)")
        self.btn_xoa = QPushButton("üóëÔ∏è X√≥a")
        self.btn_in = QPushButton("üñ®Ô∏è In phi·∫øu CD")
        self.btn_thoat = QPushButton("‚ùå Tho√°t")
        for b in [self.btn_luu, self.btn_xoa, self.btn_in, self.btn_thoat]:
            b.setMinimumWidth(120)
        btn_layout.addWidget(self.btn_luu)
        btn_layout.addWidget(self.btn_xoa)
        btn_layout.addStretch()
        btn_layout.addWidget(self.btn_in)
        btn_layout.addWidget(self.btn_thoat)
        main_layout.addLayout(btn_layout)

        # === EVENT ===
        self.combo_dichvu.currentTextChanged.connect(self.cap_nhat_gia)
        self.btn_them.clicked.connect(self.them_dich_vu)
        self.btn_xoa.clicked.connect(self.xoa_dong)
        self.btn_luu.clicked.connect(self.luu_du_lieu)
        self.btn_in.clicked.connect(self.in_phieu)

    # ========================== FUNCTION ==========================
    def load_benh_nhan(self):
        conn = get_connection()
        cur = conn.cursor()
        cur.execute("SELECT ho_ten FROM benh_nhan")
        rows = cur.fetchall()
        conn.close()
        self.combo_hoten.clear()
        self.combo_hoten.addItems([r[0] for r in rows])

    def load_dich_vu_mau(self):
        self.dichvu_dict = {
            "Kh√°m v√† t∆∞ v·∫•n": 80000,
            "Si√™u √¢m t·ªïng qu√°t": 120000,
            "X√©t nghi·ªám m√°u": 150000,
            "Ch·ª•p X-quang": 180000,
            "ƒêi·ªán tim ECG": 90000
        }
        self.combo_dichvu.addItems(self.dichvu_dict.keys())
        self.cap_nhat_gia()

    def cap_nhat_gia(self):
        dv = self.combo_dichvu.currentText()
        if dv in self.dichvu_dict:
            gia = self.dichvu_dict[dv]
            self.input_dongia.setText(str(gia))
            sl = int(self.input_soluong.text() or 1)
            self.input_thanhtien.setText(str(sl * gia))

    def them_dich_vu(self):
        dv = self.combo_dichvu.currentText()
        sl = int(self.input_soluong.text())
        dg = float(self.input_dongia.text())
        tt = sl * dg
        row = self.table.rowCount()
        self.table.insertRow(row)
        self.table.setItem(row, 0, QTableWidgetItem(str(row + 1)))
        self.table.setItem(row, 1, QTableWidgetItem(dv))
        self.table.setItem(row, 2, QTableWidgetItem(str(sl)))
        self.table.setItem(row, 3, QTableWidgetItem(str(dg)))
        self.table.setItem(row, 4, QTableWidgetItem(str(tt)))

    def xoa_dong(self):
        row = self.table.currentRow()
        if row >= 0:
            self.table.removeRow(row)

    def luu_du_lieu(self):
        if self.table.rowCount() == 0:
            QMessageBox.warning(self, "C·∫£nh b√°o", "Ch∆∞a c√≥ d·ªãch v·ª• n√†o ƒë∆∞·ª£c th√™m.")
            return
        QMessageBox.information(self, "Th√†nh c√¥ng", "ƒê√£ l∆∞u phi·∫øu ch·ªâ ƒë·ªãnh d·ªãch v·ª•!")

    def in_phieu(self):
        ho_ten = self.combo_hoten.currentText()
        file_name = f"phieu_chidinh_{ho_ten.replace(' ', '_')}.pdf"
        file_path = os.path.join(os.getcwd(), file_name)
        c = canvas.Canvas(file_path, pagesize=A4)
        c.setFont("ArialUnicode", 14)
        c.drawCentredString(300, 800, "PHI·∫æU CH·ªà ƒê·ªäNH D·ªäCH V·ª§")
        c.setFont("ArialUnicode", 11)
        c.drawString(50, 770, f"H·ªç t√™n: {ho_ten}")
        c.drawString(50, 750, f"Ng√†y l·∫≠p: {QDate.currentDate().toString('dd/MM/yyyy')}")
        y = 720
        c.setFont("ArialUnicode", 10)
        c.drawString(50, y, "T√™n d·ªãch v·ª•")
        c.drawString(250, y, "S·ªë l∆∞·ª£ng")
        c.drawString(350, y, "ƒê∆°n gi√°")
        c.drawString(450, y, "Th√†nh ti·ªÅn")
        y -= 20
        for i in range(self.table.rowCount()):
            c.drawString(50, y, self.table.item(i, 1).text())
            c.drawString(250, y, self.table.item(i, 2).text())
            c.drawString(350, y, self.table.item(i, 3).text())
            c.drawString(450, y, self.table.item(i, 4).text())
            y -= 20
        c.save()
        QMessageBox.information(self, "In phi·∫øu", f"ƒê√£ t·∫°o file PDF: {file_path}")
